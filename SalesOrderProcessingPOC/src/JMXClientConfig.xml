<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:si="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:si-amqp="http://www.springframework.org/schema/integration/amqp"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/integration 
							http://www.springframework.org/schema/integration/spring-integration-2.1.xsd 
							http://www.springframework.org/schema/integration/file  
							http://www.springframework.org/schema/integration/file/spring-integration-file-2.0.xsd
							http://www.springframework.org/schema/rabbit 
						http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
						http://www.springframework.org/schema/integration/amqp 
						http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<bean id="clientConnector" class="org.springframework.jmx.support.MBeanServerConnectionFactoryBean"
          p:serviceUrl="service:jmx:rmi://localhost/jndi/rmi://localhost:1099/sopOrderProcessor" />

    <!-- Client ServerManager proxy to JMX over JMXMP -->
    <bean id="serverManagerProxy" class="org.springframework.jmx.access.MBeanProxyFactoryBean"
          p:objectName="com.sop.test:name=SOPOrderProcessor"
          p:proxyInterface="com.sop.test.SOPOrderProcessorIntf"
          p:server-ref="clientConnector" />
          
          <bean id="SOPOrderProcessorMBeanTest" class="com.sop.jmx.test.SOPOrderProcessorMBeanTest">
          <property name="sopManager" ref="serverManagerProxy"></property>
          </bean>
          <si:channel id="serviceAvailabilityInbound"></si:channel>
          <bean id="periodicTrigger" class="org.springframework.scheduling.support.PeriodicTrigger"><constructor-arg name="period" value="50000"></constructor-arg> <property name="fixedRate" value="true"></property> </bean>
          <si:publish-subscribe-channel id="serviceMonitoringOutput"></si:publish-subscribe-channel>
     <!--<file:inbound-channel-adapter channel="serviceAvailabilityInbound" directory="../SalesOrderProcessingPOC/src/META-INF" auto-startup="true" filename-pattern="*.txt"><si:poller fixed-rate="50"></si:poller> </file:inbound-channel-adapter>
     
     
     --><si:inbound-channel-adapter ref="SOPOrderProcessorMBeanTest" method="checkServiceAvailabilityFor" channel="serviceMonitoringOutput"><si:poller fixed-rate="50000" ></si:poller></si:inbound-channel-adapter>
     <!--<rabbit:connection-factory id="rabbitQConnectionFactory"  addresses="${RabbitMQAddresses}" username="${RabbitMQClusterUserName}" password="${RabbitMQClusterPassword}" channel-cache-size="100"  />
     <rabbit:template id="amqpTemplate"  connection-factory="rabbitQConnectionFactory" queue="serviceMonitoringQueue" exchange="amq.direct"/>
     <si-amqp:outbound-channel-adapter  id="jmsInboundAdapOrder" channel="serviceMonitoringOutput" 	routing-key="serviceMonitoringQueue" amqp-template="amqpTemplate" exchange-name="amq.direct"></si-amqp:outbound-channel-adapter>
     --><!--
     <si:service-activator input-channel="serviceAvailabilityInbound" ref="SOPOrderProcessorMBeanTest" method="checkServiceAvailabilityFor" output-channel="serviceMonitoringOutput"></si:service-activator>
--></beans>
